{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dsing/Desktop/Apps/DiffLogicVisualizer/frontend/theme.ts/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const theme = registerClientReference(\n    function() { throw new Error(\"Attempted to call theme() from the server but theme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/theme.ts <module evaluation>\",\n    \"theme\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,0CACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dsing/Desktop/Apps/DiffLogicVisualizer/frontend/theme.ts/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const theme = registerClientReference(\n    function() { throw new Error(\"Attempted to call theme() from the server but theme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/theme.ts\",\n    \"theme\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,sBACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dsing/Desktop/Apps/DiffLogicVisualizer/frontend/app/layout.tsx"],"sourcesContent":["import '@mantine/core/styles.css';\r\nimport { ReactFlowProvider } from '@xyflow/react';\r\n\r\nimport React from 'react';\r\nimport { ColorSchemeScript, mantineHtmlProps, MantineProvider } from '@mantine/core';\r\nimport { theme } from '../theme';\r\n\r\nexport const metadata = {\r\n  title: 'Mantine Next.js template',\r\n  description: 'I am using Mantine with Next.js!',\r\n};\r\n\r\nexport default function RootLayout({ children }: { children: any }) {\r\n  return (\r\n    <html lang=\"en\" {...mantineHtmlProps}>\r\n      <head>\r\n        <ColorSchemeScript />\r\n        <link rel=\"shortcut icon\" href=\"/favicon.svg\" />\r\n        <meta\r\n          name=\"viewport\"\r\n          content=\"minimum-scale=1, initial-scale=1, width=device-width, user-scalable=no\"\r\n        />\r\n      </head>\r\n      <body>\r\n        <ReactFlowProvider><MantineProvider theme={theme}>{children}</MantineProvider></ReactFlowProvider>\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAKA;AADA;AAAA;AAHA;AAGA;;;;;;AAGO,MAAM,WAAW;IACtB,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EAAE,QAAQ,EAAqB;IAChE,qBACE,8OAAC;QAAK,MAAK;QAAM,GAAG,gMAAA,CAAA,mBAAgB;;0BAClC,8OAAC;;kCACC,8OAAC,8MAAA,CAAA,oBAAiB;;;;;kCAClB,8OAAC;wBAAK,KAAI;wBAAgB,MAAK;;;;;;kCAC/B,8OAAC;wBACC,MAAK;wBACL,SAAQ;;;;;;;;;;;;0BAGZ,8OAAC;0BACC,cAAA,8OAAC,yJAAA,CAAA,oBAAiB;8BAAC,cAAA,8OAAC,uLAAA,CAAA,kBAAe;wBAAC,OAAO,qGAAA,CAAA,QAAK;kCAAG;;;;;;;;;;;;;;;;;;;;;;AAI3D"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dsing/Desktop/Apps/DiffLogicVisualizer/frontend/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-rsc'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"file":"mantine-html-props.mjs","sources":["file://C%3A/Users/dsing/Desktop/Apps/DiffLogicVisualizer/frontend/node_modules/%40mantine/core/src/core/MantineProvider/mantine-html-props.ts"],"sourcesContent":["export const mantineHtmlProps = {\n  suppressHydrationWarning: true,\n  'data-mantine-color-scheme': 'light',\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,gBAAmB,GAAA;IAC9B,wBAA0B,EAAA,IAAA;IAC1B,2BAA6B,EAAA;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dsing/Desktop/Apps/DiffLogicVisualizer/frontend/node_modules/%40mantine/core/esm/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.mjs/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ColorSchemeScript = registerClientReference(\n    function() { throw new Error(\"Attempted to call ColorSchemeScript() from the server but ColorSchemeScript is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.mjs <module evaluation>\",\n    \"ColorSchemeScript\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,6HACA","ignoreList":[0]}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dsing/Desktop/Apps/DiffLogicVisualizer/frontend/node_modules/%40mantine/core/esm/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.mjs/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ColorSchemeScript = registerClientReference(\n    function() { throw new Error(\"Attempted to call ColorSchemeScript() from the server but ColorSchemeScript is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.mjs\",\n    \"ColorSchemeScript\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,yGACA","ignoreList":[0]}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"file":"ColorSchemeScript.mjs","sources":["file://C%3A/Users/dsing/Desktop/Apps/DiffLogicVisualizer/frontend/node_modules/%40mantine/core/src/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.tsx"],"sourcesContent":["import type { MantineColorScheme } from '../theme.types';\n\nexport interface ColorSchemeScriptProps extends React.ComponentPropsWithoutRef<'script'> {\n  forceColorScheme?: 'light' | 'dark';\n  defaultColorScheme?: MantineColorScheme;\n  localStorageKey?: string;\n}\n\nconst getScript = ({\n  defaultColorScheme,\n  localStorageKey,\n  forceColorScheme,\n}: Pick<ColorSchemeScriptProps, 'defaultColorScheme' | 'localStorageKey' | 'forceColorScheme'>) =>\n  forceColorScheme\n    ? `document.documentElement.setAttribute(\"data-mantine-color-scheme\", '${forceColorScheme}');`\n    : `try {\n  var _colorScheme = window.localStorage.getItem(\"${localStorageKey}\");\n  var colorScheme = _colorScheme === \"light\" || _colorScheme === \"dark\" || _colorScheme === \"auto\" ? _colorScheme : \"${defaultColorScheme}\";\n  var computedColorScheme = colorScheme !== \"auto\" ? colorScheme : window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n  document.documentElement.setAttribute(\"data-mantine-color-scheme\", computedColorScheme);\n} catch (e) {}\n`;\n\nexport function ColorSchemeScript({\n  defaultColorScheme = 'light',\n  localStorageKey = 'mantine-color-scheme-value',\n  forceColorScheme,\n  ...others\n}: ColorSchemeScriptProps) {\n  const _defaultColorScheme = ['light', 'dark', 'auto'].includes(defaultColorScheme)\n    ? defaultColorScheme\n    : 'light';\n  return (\n    <script\n      {...others}\n      data-mantine-script\n      dangerouslySetInnerHTML={{\n        __html: getScript({\n          defaultColorScheme: _defaultColorScheme,\n          localStorageKey,\n          forceColorScheme,\n        }),\n      }}\n    />\n  );\n}\n"],"names":[],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dsing/Desktop/Apps/DiffLogicVisualizer/frontend/node_modules/%40xyflow/react/dist/esm/index.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Background = registerClientReference(\n    function() { throw new Error(\"Attempted to call Background() from the server but Background is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"Background\",\n);\nexport const BackgroundVariant = registerClientReference(\n    function() { throw new Error(\"Attempted to call BackgroundVariant() from the server but BackgroundVariant is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"BackgroundVariant\",\n);\nexport const BaseEdge = registerClientReference(\n    function() { throw new Error(\"Attempted to call BaseEdge() from the server but BaseEdge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"BaseEdge\",\n);\nexport const BezierEdge = registerClientReference(\n    function() { throw new Error(\"Attempted to call BezierEdge() from the server but BezierEdge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"BezierEdge\",\n);\nexport const ConnectionLineType = registerClientReference(\n    function() { throw new Error(\"Attempted to call ConnectionLineType() from the server but ConnectionLineType is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"ConnectionLineType\",\n);\nexport const ConnectionMode = registerClientReference(\n    function() { throw new Error(\"Attempted to call ConnectionMode() from the server but ConnectionMode is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"ConnectionMode\",\n);\nexport const ControlButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call ControlButton() from the server but ControlButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"ControlButton\",\n);\nexport const Controls = registerClientReference(\n    function() { throw new Error(\"Attempted to call Controls() from the server but Controls is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"Controls\",\n);\nexport const EdgeLabelRenderer = registerClientReference(\n    function() { throw new Error(\"Attempted to call EdgeLabelRenderer() from the server but EdgeLabelRenderer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"EdgeLabelRenderer\",\n);\nexport const EdgeText = registerClientReference(\n    function() { throw new Error(\"Attempted to call EdgeText() from the server but EdgeText is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"EdgeText\",\n);\nexport const Handle = registerClientReference(\n    function() { throw new Error(\"Attempted to call Handle() from the server but Handle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"Handle\",\n);\nexport const MarkerType = registerClientReference(\n    function() { throw new Error(\"Attempted to call MarkerType() from the server but MarkerType is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"MarkerType\",\n);\nexport const MiniMap = registerClientReference(\n    function() { throw new Error(\"Attempted to call MiniMap() from the server but MiniMap is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"MiniMap\",\n);\nexport const NodeResizeControl = registerClientReference(\n    function() { throw new Error(\"Attempted to call NodeResizeControl() from the server but NodeResizeControl is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"NodeResizeControl\",\n);\nexport const NodeResizer = registerClientReference(\n    function() { throw new Error(\"Attempted to call NodeResizer() from the server but NodeResizer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"NodeResizer\",\n);\nexport const NodeToolbar = registerClientReference(\n    function() { throw new Error(\"Attempted to call NodeToolbar() from the server but NodeToolbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"NodeToolbar\",\n);\nexport const PanOnScrollMode = registerClientReference(\n    function() { throw new Error(\"Attempted to call PanOnScrollMode() from the server but PanOnScrollMode is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"PanOnScrollMode\",\n);\nexport const Panel = registerClientReference(\n    function() { throw new Error(\"Attempted to call Panel() from the server but Panel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"Panel\",\n);\nexport const Position = registerClientReference(\n    function() { throw new Error(\"Attempted to call Position() from the server but Position is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"Position\",\n);\nexport const ReactFlow = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReactFlow() from the server but ReactFlow is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"ReactFlow\",\n);\nexport const ReactFlowProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReactFlowProvider() from the server but ReactFlowProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"ReactFlowProvider\",\n);\nexport const ResizeControlVariant = registerClientReference(\n    function() { throw new Error(\"Attempted to call ResizeControlVariant() from the server but ResizeControlVariant is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"ResizeControlVariant\",\n);\nexport const SelectionMode = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectionMode() from the server but SelectionMode is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"SelectionMode\",\n);\nexport const SimpleBezierEdge = registerClientReference(\n    function() { throw new Error(\"Attempted to call SimpleBezierEdge() from the server but SimpleBezierEdge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"SimpleBezierEdge\",\n);\nexport const SmoothStepEdge = registerClientReference(\n    function() { throw new Error(\"Attempted to call SmoothStepEdge() from the server but SmoothStepEdge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"SmoothStepEdge\",\n);\nexport const StepEdge = registerClientReference(\n    function() { throw new Error(\"Attempted to call StepEdge() from the server but StepEdge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"StepEdge\",\n);\nexport const StraightEdge = registerClientReference(\n    function() { throw new Error(\"Attempted to call StraightEdge() from the server but StraightEdge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"StraightEdge\",\n);\nexport const ViewportPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call ViewportPortal() from the server but ViewportPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"ViewportPortal\",\n);\nexport const addEdge = registerClientReference(\n    function() { throw new Error(\"Attempted to call addEdge() from the server but addEdge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"addEdge\",\n);\nexport const applyEdgeChanges = registerClientReference(\n    function() { throw new Error(\"Attempted to call applyEdgeChanges() from the server but applyEdgeChanges is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"applyEdgeChanges\",\n);\nexport const applyNodeChanges = registerClientReference(\n    function() { throw new Error(\"Attempted to call applyNodeChanges() from the server but applyNodeChanges is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"applyNodeChanges\",\n);\nexport const getBezierEdgeCenter = registerClientReference(\n    function() { throw new Error(\"Attempted to call getBezierEdgeCenter() from the server but getBezierEdgeCenter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"getBezierEdgeCenter\",\n);\nexport const getBezierPath = registerClientReference(\n    function() { throw new Error(\"Attempted to call getBezierPath() from the server but getBezierPath is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"getBezierPath\",\n);\nexport const getConnectedEdges = registerClientReference(\n    function() { throw new Error(\"Attempted to call getConnectedEdges() from the server but getConnectedEdges is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"getConnectedEdges\",\n);\nexport const getEdgeCenter = registerClientReference(\n    function() { throw new Error(\"Attempted to call getEdgeCenter() from the server but getEdgeCenter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"getEdgeCenter\",\n);\nexport const getIncomers = registerClientReference(\n    function() { throw new Error(\"Attempted to call getIncomers() from the server but getIncomers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"getIncomers\",\n);\nexport const getNodesBounds = registerClientReference(\n    function() { throw new Error(\"Attempted to call getNodesBounds() from the server but getNodesBounds is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"getNodesBounds\",\n);\nexport const getOutgoers = registerClientReference(\n    function() { throw new Error(\"Attempted to call getOutgoers() from the server but getOutgoers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"getOutgoers\",\n);\nexport const getSimpleBezierPath = registerClientReference(\n    function() { throw new Error(\"Attempted to call getSimpleBezierPath() from the server but getSimpleBezierPath is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"getSimpleBezierPath\",\n);\nexport const getSmoothStepPath = registerClientReference(\n    function() { throw new Error(\"Attempted to call getSmoothStepPath() from the server but getSmoothStepPath is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"getSmoothStepPath\",\n);\nexport const getStraightPath = registerClientReference(\n    function() { throw new Error(\"Attempted to call getStraightPath() from the server but getStraightPath is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"getStraightPath\",\n);\nexport const getViewportForBounds = registerClientReference(\n    function() { throw new Error(\"Attempted to call getViewportForBounds() from the server but getViewportForBounds is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"getViewportForBounds\",\n);\nexport const isEdge = registerClientReference(\n    function() { throw new Error(\"Attempted to call isEdge() from the server but isEdge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"isEdge\",\n);\nexport const isNode = registerClientReference(\n    function() { throw new Error(\"Attempted to call isNode() from the server but isNode is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"isNode\",\n);\nexport const reconnectEdge = registerClientReference(\n    function() { throw new Error(\"Attempted to call reconnectEdge() from the server but reconnectEdge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"reconnectEdge\",\n);\nexport const useConnection = registerClientReference(\n    function() { throw new Error(\"Attempted to call useConnection() from the server but useConnection is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"useConnection\",\n);\nexport const useEdges = registerClientReference(\n    function() { throw new Error(\"Attempted to call useEdges() from the server but useEdges is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"useEdges\",\n);\nexport const useEdgesState = registerClientReference(\n    function() { throw new Error(\"Attempted to call useEdgesState() from the server but useEdgesState is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"useEdgesState\",\n);\nexport const useHandleConnections = registerClientReference(\n    function() { throw new Error(\"Attempted to call useHandleConnections() from the server but useHandleConnections is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"useHandleConnections\",\n);\nexport const useInternalNode = registerClientReference(\n    function() { throw new Error(\"Attempted to call useInternalNode() from the server but useInternalNode is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"useInternalNode\",\n);\nexport const useKeyPress = registerClientReference(\n    function() { throw new Error(\"Attempted to call useKeyPress() from the server but useKeyPress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"useKeyPress\",\n);\nexport const useNodeConnections = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNodeConnections() from the server but useNodeConnections is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"useNodeConnections\",\n);\nexport const useNodeId = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNodeId() from the server but useNodeId is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"useNodeId\",\n);\nexport const useNodes = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNodes() from the server but useNodes is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"useNodes\",\n);\nexport const useNodesData = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNodesData() from the server but useNodesData is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"useNodesData\",\n);\nexport const useNodesInitialized = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNodesInitialized() from the server but useNodesInitialized is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"useNodesInitialized\",\n);\nexport const useNodesState = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNodesState() from the server but useNodesState is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"useNodesState\",\n);\nexport const useOnSelectionChange = registerClientReference(\n    function() { throw new Error(\"Attempted to call useOnSelectionChange() from the server but useOnSelectionChange is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"useOnSelectionChange\",\n);\nexport const useOnViewportChange = registerClientReference(\n    function() { throw new Error(\"Attempted to call useOnViewportChange() from the server but useOnViewportChange is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"useOnViewportChange\",\n);\nexport const useReactFlow = registerClientReference(\n    function() { throw new Error(\"Attempted to call useReactFlow() from the server but useReactFlow is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"useReactFlow\",\n);\nexport const useStore = registerClientReference(\n    function() { throw new Error(\"Attempted to call useStore() from the server but useStore is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"useStore\",\n);\nexport const useStoreApi = registerClientReference(\n    function() { throw new Error(\"Attempted to call useStoreApi() from the server but useStoreApi is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"useStoreApi\",\n);\nexport const useUpdateNodeInternals = registerClientReference(\n    function() { throw new Error(\"Attempted to call useUpdateNodeInternals() from the server but useUpdateNodeInternals is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"useUpdateNodeInternals\",\n);\nexport const useViewport = registerClientReference(\n    function() { throw new Error(\"Attempted to call useViewport() from the server but useViewport is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js <module evaluation>\",\n    \"useViewport\",\n);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dsing/Desktop/Apps/DiffLogicVisualizer/frontend/node_modules/%40xyflow/react/dist/esm/index.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Background = registerClientReference(\n    function() { throw new Error(\"Attempted to call Background() from the server but Background is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"Background\",\n);\nexport const BackgroundVariant = registerClientReference(\n    function() { throw new Error(\"Attempted to call BackgroundVariant() from the server but BackgroundVariant is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"BackgroundVariant\",\n);\nexport const BaseEdge = registerClientReference(\n    function() { throw new Error(\"Attempted to call BaseEdge() from the server but BaseEdge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"BaseEdge\",\n);\nexport const BezierEdge = registerClientReference(\n    function() { throw new Error(\"Attempted to call BezierEdge() from the server but BezierEdge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"BezierEdge\",\n);\nexport const ConnectionLineType = registerClientReference(\n    function() { throw new Error(\"Attempted to call ConnectionLineType() from the server but ConnectionLineType is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"ConnectionLineType\",\n);\nexport const ConnectionMode = registerClientReference(\n    function() { throw new Error(\"Attempted to call ConnectionMode() from the server but ConnectionMode is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"ConnectionMode\",\n);\nexport const ControlButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call ControlButton() from the server but ControlButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"ControlButton\",\n);\nexport const Controls = registerClientReference(\n    function() { throw new Error(\"Attempted to call Controls() from the server but Controls is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"Controls\",\n);\nexport const EdgeLabelRenderer = registerClientReference(\n    function() { throw new Error(\"Attempted to call EdgeLabelRenderer() from the server but EdgeLabelRenderer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"EdgeLabelRenderer\",\n);\nexport const EdgeText = registerClientReference(\n    function() { throw new Error(\"Attempted to call EdgeText() from the server but EdgeText is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"EdgeText\",\n);\nexport const Handle = registerClientReference(\n    function() { throw new Error(\"Attempted to call Handle() from the server but Handle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"Handle\",\n);\nexport const MarkerType = registerClientReference(\n    function() { throw new Error(\"Attempted to call MarkerType() from the server but MarkerType is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"MarkerType\",\n);\nexport const MiniMap = registerClientReference(\n    function() { throw new Error(\"Attempted to call MiniMap() from the server but MiniMap is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"MiniMap\",\n);\nexport const NodeResizeControl = registerClientReference(\n    function() { throw new Error(\"Attempted to call NodeResizeControl() from the server but NodeResizeControl is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"NodeResizeControl\",\n);\nexport const NodeResizer = registerClientReference(\n    function() { throw new Error(\"Attempted to call NodeResizer() from the server but NodeResizer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"NodeResizer\",\n);\nexport const NodeToolbar = registerClientReference(\n    function() { throw new Error(\"Attempted to call NodeToolbar() from the server but NodeToolbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"NodeToolbar\",\n);\nexport const PanOnScrollMode = registerClientReference(\n    function() { throw new Error(\"Attempted to call PanOnScrollMode() from the server but PanOnScrollMode is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"PanOnScrollMode\",\n);\nexport const Panel = registerClientReference(\n    function() { throw new Error(\"Attempted to call Panel() from the server but Panel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"Panel\",\n);\nexport const Position = registerClientReference(\n    function() { throw new Error(\"Attempted to call Position() from the server but Position is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"Position\",\n);\nexport const ReactFlow = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReactFlow() from the server but ReactFlow is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"ReactFlow\",\n);\nexport const ReactFlowProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReactFlowProvider() from the server but ReactFlowProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"ReactFlowProvider\",\n);\nexport const ResizeControlVariant = registerClientReference(\n    function() { throw new Error(\"Attempted to call ResizeControlVariant() from the server but ResizeControlVariant is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"ResizeControlVariant\",\n);\nexport const SelectionMode = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectionMode() from the server but SelectionMode is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"SelectionMode\",\n);\nexport const SimpleBezierEdge = registerClientReference(\n    function() { throw new Error(\"Attempted to call SimpleBezierEdge() from the server but SimpleBezierEdge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"SimpleBezierEdge\",\n);\nexport const SmoothStepEdge = registerClientReference(\n    function() { throw new Error(\"Attempted to call SmoothStepEdge() from the server but SmoothStepEdge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"SmoothStepEdge\",\n);\nexport const StepEdge = registerClientReference(\n    function() { throw new Error(\"Attempted to call StepEdge() from the server but StepEdge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"StepEdge\",\n);\nexport const StraightEdge = registerClientReference(\n    function() { throw new Error(\"Attempted to call StraightEdge() from the server but StraightEdge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"StraightEdge\",\n);\nexport const ViewportPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call ViewportPortal() from the server but ViewportPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"ViewportPortal\",\n);\nexport const addEdge = registerClientReference(\n    function() { throw new Error(\"Attempted to call addEdge() from the server but addEdge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"addEdge\",\n);\nexport const applyEdgeChanges = registerClientReference(\n    function() { throw new Error(\"Attempted to call applyEdgeChanges() from the server but applyEdgeChanges is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"applyEdgeChanges\",\n);\nexport const applyNodeChanges = registerClientReference(\n    function() { throw new Error(\"Attempted to call applyNodeChanges() from the server but applyNodeChanges is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"applyNodeChanges\",\n);\nexport const getBezierEdgeCenter = registerClientReference(\n    function() { throw new Error(\"Attempted to call getBezierEdgeCenter() from the server but getBezierEdgeCenter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"getBezierEdgeCenter\",\n);\nexport const getBezierPath = registerClientReference(\n    function() { throw new Error(\"Attempted to call getBezierPath() from the server but getBezierPath is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"getBezierPath\",\n);\nexport const getConnectedEdges = registerClientReference(\n    function() { throw new Error(\"Attempted to call getConnectedEdges() from the server but getConnectedEdges is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"getConnectedEdges\",\n);\nexport const getEdgeCenter = registerClientReference(\n    function() { throw new Error(\"Attempted to call getEdgeCenter() from the server but getEdgeCenter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"getEdgeCenter\",\n);\nexport const getIncomers = registerClientReference(\n    function() { throw new Error(\"Attempted to call getIncomers() from the server but getIncomers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"getIncomers\",\n);\nexport const getNodesBounds = registerClientReference(\n    function() { throw new Error(\"Attempted to call getNodesBounds() from the server but getNodesBounds is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"getNodesBounds\",\n);\nexport const getOutgoers = registerClientReference(\n    function() { throw new Error(\"Attempted to call getOutgoers() from the server but getOutgoers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"getOutgoers\",\n);\nexport const getSimpleBezierPath = registerClientReference(\n    function() { throw new Error(\"Attempted to call getSimpleBezierPath() from the server but getSimpleBezierPath is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"getSimpleBezierPath\",\n);\nexport const getSmoothStepPath = registerClientReference(\n    function() { throw new Error(\"Attempted to call getSmoothStepPath() from the server but getSmoothStepPath is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"getSmoothStepPath\",\n);\nexport const getStraightPath = registerClientReference(\n    function() { throw new Error(\"Attempted to call getStraightPath() from the server but getStraightPath is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"getStraightPath\",\n);\nexport const getViewportForBounds = registerClientReference(\n    function() { throw new Error(\"Attempted to call getViewportForBounds() from the server but getViewportForBounds is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"getViewportForBounds\",\n);\nexport const isEdge = registerClientReference(\n    function() { throw new Error(\"Attempted to call isEdge() from the server but isEdge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"isEdge\",\n);\nexport const isNode = registerClientReference(\n    function() { throw new Error(\"Attempted to call isNode() from the server but isNode is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"isNode\",\n);\nexport const reconnectEdge = registerClientReference(\n    function() { throw new Error(\"Attempted to call reconnectEdge() from the server but reconnectEdge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"reconnectEdge\",\n);\nexport const useConnection = registerClientReference(\n    function() { throw new Error(\"Attempted to call useConnection() from the server but useConnection is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"useConnection\",\n);\nexport const useEdges = registerClientReference(\n    function() { throw new Error(\"Attempted to call useEdges() from the server but useEdges is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"useEdges\",\n);\nexport const useEdgesState = registerClientReference(\n    function() { throw new Error(\"Attempted to call useEdgesState() from the server but useEdgesState is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"useEdgesState\",\n);\nexport const useHandleConnections = registerClientReference(\n    function() { throw new Error(\"Attempted to call useHandleConnections() from the server but useHandleConnections is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"useHandleConnections\",\n);\nexport const useInternalNode = registerClientReference(\n    function() { throw new Error(\"Attempted to call useInternalNode() from the server but useInternalNode is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"useInternalNode\",\n);\nexport const useKeyPress = registerClientReference(\n    function() { throw new Error(\"Attempted to call useKeyPress() from the server but useKeyPress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"useKeyPress\",\n);\nexport const useNodeConnections = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNodeConnections() from the server but useNodeConnections is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"useNodeConnections\",\n);\nexport const useNodeId = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNodeId() from the server but useNodeId is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"useNodeId\",\n);\nexport const useNodes = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNodes() from the server but useNodes is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"useNodes\",\n);\nexport const useNodesData = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNodesData() from the server but useNodesData is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"useNodesData\",\n);\nexport const useNodesInitialized = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNodesInitialized() from the server but useNodesInitialized is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"useNodesInitialized\",\n);\nexport const useNodesState = registerClientReference(\n    function() { throw new Error(\"Attempted to call useNodesState() from the server but useNodesState is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"useNodesState\",\n);\nexport const useOnSelectionChange = registerClientReference(\n    function() { throw new Error(\"Attempted to call useOnSelectionChange() from the server but useOnSelectionChange is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"useOnSelectionChange\",\n);\nexport const useOnViewportChange = registerClientReference(\n    function() { throw new Error(\"Attempted to call useOnViewportChange() from the server but useOnViewportChange is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"useOnViewportChange\",\n);\nexport const useReactFlow = registerClientReference(\n    function() { throw new Error(\"Attempted to call useReactFlow() from the server but useReactFlow is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"useReactFlow\",\n);\nexport const useStore = registerClientReference(\n    function() { throw new Error(\"Attempted to call useStore() from the server but useStore is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"useStore\",\n);\nexport const useStoreApi = registerClientReference(\n    function() { throw new Error(\"Attempted to call useStoreApi() from the server but useStoreApi is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"useStoreApi\",\n);\nexport const useUpdateNodeInternals = registerClientReference(\n    function() { throw new Error(\"Attempted to call useUpdateNodeInternals() from the server but useUpdateNodeInternals is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"useUpdateNodeInternals\",\n);\nexport const useViewport = registerClientReference(\n    function() { throw new Error(\"Attempted to call useViewport() from the server but useViewport is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@xyflow/react/dist/esm/index.js\",\n    \"useViewport\",\n);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 723, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 729, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 733, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 739, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dsing/Desktop/Apps/DiffLogicVisualizer/frontend/node_modules/%40mantine/core/esm/core/MantineProvider/MantineProvider.mjs/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const HeadlessMantineProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call HeadlessMantineProvider() from the server but HeadlessMantineProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs <module evaluation>\",\n    \"HeadlessMantineProvider\",\n);\nexport const MantineProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call MantineProvider() from the server but MantineProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs <module evaluation>\",\n    \"MantineProvider\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,0BAA0B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzD;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,yGACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,yGACA","ignoreList":[0]}},
    {"offset": {"line": 751, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 757, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dsing/Desktop/Apps/DiffLogicVisualizer/frontend/node_modules/%40mantine/core/esm/core/MantineProvider/MantineProvider.mjs/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const HeadlessMantineProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call HeadlessMantineProvider() from the server but HeadlessMantineProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs\",\n    \"HeadlessMantineProvider\",\n);\nexport const MantineProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call MantineProvider() from the server but MantineProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs\",\n    \"MantineProvider\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,0BAA0B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzD;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,qFACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,qFACA","ignoreList":[0]}},
    {"offset": {"line": 769, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 775, "column": 0}, "map": {"version":3,"file":"MantineProvider.mjs","sources":["file://C%3A/Users/dsing/Desktop/Apps/DiffLogicVisualizer/frontend/node_modules/%40mantine/core/src/core/MantineProvider/MantineProvider.tsx"],"sourcesContent":["import './global.css';\n\nimport { localStorageColorSchemeManager, MantineColorSchemeManager } from './color-scheme-managers';\nimport { MantineContext, MantineStylesTransform } from './Mantine.context';\nimport { MantineClasses } from './MantineClasses';\nimport { CSSVariablesResolver, MantineCssVariables } from './MantineCssVariables';\nimport { MantineThemeProvider } from './MantineThemeProvider';\nimport { suppressNextjsWarning } from './suppress-nextjs-warning';\nimport type { MantineColorScheme, MantineThemeOverride } from './theme.types';\nimport { useProviderColorScheme } from './use-mantine-color-scheme';\nimport { useRespectReduceMotion } from './use-respect-reduce-motion';\n\nsuppressNextjsWarning();\n\nexport interface MantineProviderProps {\n  /** Theme override object */\n  theme?: MantineThemeOverride;\n\n  /** Used to retrieve/set color scheme value in external storage, by default uses `window.localStorage` */\n  colorSchemeManager?: MantineColorSchemeManager;\n\n  /** Default color scheme value used when `colorSchemeManager` cannot retrieve value from external storage, `light` by default */\n  defaultColorScheme?: MantineColorScheme;\n\n  /** Forces color scheme value, if set, MantineProvider ignores `colorSchemeManager` and `defaultColorScheme` */\n  forceColorScheme?: 'light' | 'dark';\n\n  /** CSS selector to which CSS variables should be added, `:root` by default */\n  cssVariablesSelector?: string;\n\n  /** Determines whether theme CSS variables should be added to given `cssVariablesSelector`, `true` by default */\n  withCssVariables?: boolean;\n\n  /** Determines whether CSS variables should be deduplicated: if CSS variable has the same value as in default theme, it is not added in the runtime. `true` by default. */\n  deduplicateCssVariables?: boolean;\n\n  /** Function to resolve root element to set `data-mantine-color-scheme` attribute, must return undefined on server, `() => document.documentElement` by default */\n  getRootElement?: () => HTMLElement | undefined;\n\n  /** A prefix for components static classes (for example {selector}-Text-root), `mantine` by default */\n  classNamesPrefix?: string;\n\n  /** Function to generate nonce attribute added to all generated `<style />` tags */\n  getStyleNonce?: () => string;\n\n  /** Function to generate CSS variables based on theme object */\n  cssVariablesResolver?: CSSVariablesResolver;\n\n  /** Determines whether components should have static classes, for example, `mantine-Button-root`. `true` by default */\n  withStaticClasses?: boolean;\n\n  /** Determines whether global classes should be added with `<style />` tag. Global classes are required for `hiddenFrom`/`visibleFrom` and `lightHidden`/`darkHidden` props to work. `true` by default. */\n  withGlobalClasses?: boolean;\n\n  /** An object to transform `styles` and `sx` props into css classes, can be used with CSS-in-JS libraries */\n  stylesTransform?: MantineStylesTransform;\n\n  /** Your application */\n  children?: React.ReactNode;\n}\n\nexport function MantineProvider({\n  theme,\n  children,\n  getStyleNonce,\n  withStaticClasses = true,\n  withGlobalClasses = true,\n  deduplicateCssVariables = true,\n  withCssVariables = true,\n  cssVariablesSelector = ':root',\n  classNamesPrefix = 'mantine',\n  colorSchemeManager = localStorageColorSchemeManager(),\n  defaultColorScheme = 'light',\n  getRootElement = () => document.documentElement,\n  cssVariablesResolver,\n  forceColorScheme,\n  stylesTransform,\n}: MantineProviderProps) {\n  const { colorScheme, setColorScheme, clearColorScheme } = useProviderColorScheme({\n    defaultColorScheme,\n    forceColorScheme,\n    manager: colorSchemeManager,\n    getRootElement,\n  });\n\n  useRespectReduceMotion({\n    respectReducedMotion: theme?.respectReducedMotion || false,\n    getRootElement,\n  });\n\n  return (\n    <MantineContext.Provider\n      value={{\n        colorScheme,\n        setColorScheme,\n        clearColorScheme,\n        getRootElement,\n        classNamesPrefix,\n        getStyleNonce,\n        cssVariablesResolver,\n        cssVariablesSelector,\n        withStaticClasses,\n        stylesTransform,\n      }}\n    >\n      <MantineThemeProvider theme={theme}>\n        {withCssVariables && (\n          <MantineCssVariables\n            cssVariablesSelector={cssVariablesSelector}\n            deduplicateCssVariables={deduplicateCssVariables}\n          />\n        )}\n        {withGlobalClasses && <MantineClasses />}\n        {children}\n      </MantineThemeProvider>\n    </MantineContext.Provider>\n  );\n}\n\nMantineProvider.displayName = '@mantine/core/MantineProvider';\n\nexport interface HeadlessMantineProviderProps {\n  /** Theme override object */\n  theme?: MantineThemeOverride;\n\n  /** Your application */\n  children?: React.ReactNode;\n}\n\nexport function HeadlessMantineProvider({ children, theme }: HeadlessMantineProviderProps) {\n  return (\n    <MantineContext.Provider\n      value={{\n        colorScheme: 'auto',\n        setColorScheme: () => {},\n        clearColorScheme: () => {},\n        getRootElement: () => document.documentElement,\n        classNamesPrefix: 'mantine',\n        cssVariablesSelector: ':root',\n        withStaticClasses: false,\n        headless: true,\n      }}\n    >\n      <MantineThemeProvider theme={theme}>{children}</MantineThemeProvider>\n    </MantineContext.Provider>\n  );\n}\n\nHeadlessMantineProvider.displayName = '@mantine/core/HeadlessMantineProvider';\n"],"names":[],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 779, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}